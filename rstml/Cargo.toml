[package]
name = "rstml"
description.workspace = true
version = "0.12.1"
authors.workspace = true
keywords.workspace = true
edition.workspace = true
repository.workspace = true
readme.workspace = true
license.workspace = true
include.workspace = true
[lib]
bench = false

[dependencies]
proc-macro2.workspace = true
quote.workspace = true
syn.workspace = true
thiserror.workspace = true
syn_derive.workspace = true
proc-macro2-diagnostics.workspace = true
derive-where.workspace = true

[dev-dependencies]
proc-macro2 = { workspace = true, features = ["span-locations"] }
criterion.workspace = true
eyre.workspace = true

[[bench]]
name = "bench"
harness = false
path = "benches/bench.rs"


[features]
default = ["colors"]
# Hack that parse input two times, using `proc-macro2::fallback` to recover spaces, and persist original spans.
# It has no penalty in nightly, but in stable it parses input two times.
# In order to use this feature, one should also set `ParserConfig::macro_call_pattern`.
rawtext-stable-hack = ["rawtext-stable-hack-module"]
# Export inters of rawtext_stable_hack. It is usefull if you need support of `UnquotedText` on stable but your macro is called from other one.
rawtext-stable-hack-module = []
colors = ["proc-macro2-diagnostics/colors"]

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(rstml_signal_nightly)'] }
